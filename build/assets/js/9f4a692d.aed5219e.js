"use strict";(self.webpackChunkweekoflearning_docsite=self.webpackChunkweekoflearning_docsite||[]).push([[741],{3905:(e,t,n)=>{n.d(t,{Zo:()=>l,kt:()=>f});var r=n(7294);function i(e,t,n){return t in e?Object.defineProperty(e,t,{value:n,enumerable:!0,configurable:!0,writable:!0}):e[t]=n,e}function o(e,t){var n=Object.keys(e);if(Object.getOwnPropertySymbols){var r=Object.getOwnPropertySymbols(e);t&&(r=r.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),n.push.apply(n,r)}return n}function a(e){for(var t=1;t<arguments.length;t++){var n=null!=arguments[t]?arguments[t]:{};t%2?o(Object(n),!0).forEach((function(t){i(e,t,n[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(n)):o(Object(n)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(n,t))}))}return e}function s(e,t){if(null==e)return{};var n,r,i=function(e,t){if(null==e)return{};var n,r,i={},o=Object.keys(e);for(r=0;r<o.length;r++)n=o[r],t.indexOf(n)>=0||(i[n]=e[n]);return i}(e,t);if(Object.getOwnPropertySymbols){var o=Object.getOwnPropertySymbols(e);for(r=0;r<o.length;r++)n=o[r],t.indexOf(n)>=0||Object.prototype.propertyIsEnumerable.call(e,n)&&(i[n]=e[n])}return i}var c=r.createContext({}),u=function(e){var t=r.useContext(c),n=t;return e&&(n="function"==typeof e?e(t):a(a({},t),e)),n},l=function(e){var t=u(e.components);return r.createElement(c.Provider,{value:t},e.children)},p="mdxType",d={inlineCode:"code",wrapper:function(e){var t=e.children;return r.createElement(r.Fragment,{},t)}},h=r.forwardRef((function(e,t){var n=e.components,i=e.mdxType,o=e.originalType,c=e.parentName,l=s(e,["components","mdxType","originalType","parentName"]),p=u(n),h=i,f=p["".concat(c,".").concat(h)]||p[h]||d[h]||o;return n?r.createElement(f,a(a({ref:t},l),{},{components:n})):r.createElement(f,a({ref:t},l))}));function f(e,t){var n=arguments,i=t&&t.mdxType;if("string"==typeof e||i){var o=n.length,a=new Array(o);a[0]=h;var s={};for(var c in t)hasOwnProperty.call(t,c)&&(s[c]=t[c]);s.originalType=e,s[p]="string"==typeof e?e:i,a[1]=s;for(var u=2;u<o;u++)a[u]=n[u];return r.createElement.apply(null,a)}return r.createElement.apply(null,n)}h.displayName="MDXCreateElement"},3862:(e,t,n)=>{n.r(t),n.d(t,{assets:()=>c,contentTitle:()=>a,default:()=>p,frontMatter:()=>o,metadata:()=>s,toc:()=>u});var r=n(7462),i=(n(7294),n(3905));const o={},a=void 0,s={unversionedId:"topics/authentication",id:"topics/authentication",title:"authentication",description:"O-auth-2 sequence",source:"@site/docs/topics/authentication.md",sourceDirName:"topics",slug:"/topics/authentication",permalink:"/documentations/build/topics/authentication",draft:!1,tags:[],version:"current",frontMatter:{},sidebar:"docsidebar",previous:{title:"Topics",permalink:"/documentations/build/category/topics"},next:{title:"aws",permalink:"/documentations/build/topics/aws"}},c={},u=[{value:"O-auth-2 sequence",id:"o-auth-2-sequence",level:3},{value:"Oidc sequence",id:"oidc-sequence",level:3}],l={toc:u};function p(e){let{components:t,...n}=e;return(0,i.kt)("wrapper",(0,r.Z)({},l,n,{components:t,mdxType:"MDXLayout"}),(0,i.kt)("h3",{id:"o-auth-2-sequence"},"O-auth-2 sequence"),(0,i.kt)("p",null,"OAuth2 is a protocol for authorization, allowing third-party applications to access resources on behalf of a user, without the user having to give their credentials to the third-party application. This is useful for scenarios such as allowing a mobile app to access a user's Google Drive files, without the user having to share their Google login credentials with the app."),(0,i.kt)("pre",null,(0,i.kt)("code",{parentName:"pre",className:"language-mermaid"},"sequenceDiagram\n  participant User\n  participant Client\n  participant AuthorizationServer\n  participant ResourceServer\n  User->>Client: Requests access\n  Client->>AuthorizationServer: Requests authorization\n  AuthorizationServer->>User: Asks for permission\n  User--\x3e>AuthorizationServer: Grants permission\n  AuthorizationServer->>Client: Sends authorization code\n  Client->>ResourceServer: Requests access token\n  ResourceServer->>Client: Sends access token\n")),(0,i.kt)("h3",{id:"oidc-sequence"},"Oidc sequence"),(0,i.kt)("p",null,"OpenID Connect (OIDC) is built on top of OAuth2 and provides an authentication layer. OIDC allows a user to authenticate with an identity provider (such as Google or Facebook) and then receive a JSON Web Token (JWT) which can be used to prove their identity to other applications. This allows applications to trust the user's identity without having to handle the user's credentials directly."),(0,i.kt)("pre",null,(0,i.kt)("code",{parentName:"pre",className:"language-mermaid"},"sequenceDiagram\n  participant User\n  participant Client\n  participant IdentityProvider\n  User->>Client: Navigates to the client app\n  Client->>IdentityProvider: Requests authentication\n  IdentityProvider->>User: Prompts for authentication\n  User--\x3e>IdentityProvider: Authenticates\n  IdentityProvider->>Client: Sends ID token and access token\n  Client->>User: Navigates to client app with access token\n")))}p.isMDXComponent=!0}}]);